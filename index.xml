<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Zentria Blog</title><link>https://blog.zentria.company/</link><description>Recent content on Zentria Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 03 Sep 2022 22:38:50 +0300</lastBuildDate><atom:link href="https://blog.zentria.company/index.xml" rel="self" type="application/rss+xml"/><item><title>It's 2022: nftables kind of integrates now</title><link>https://blog.zentria.company/posts/its-2022-nftables-kind-of-integrates-now/</link><pubDate>Sat, 03 Sep 2022 22:38:50 +0300</pubDate><guid>https://blog.zentria.company/posts/its-2022-nftables-kind-of-integrates-now/</guid><description>This is a follow up to the It&amp;rsquo;s 2021: nftables still does not integrate.
The good: What works compared to 2021? Pretty much everything is still revolving around the iptables-nft compatibility layer, but it has improved a lot so things seem to work just fine now.
libvirt Everything works. Seems to implicitly use compatibility layer very likely (assuming from libvirt Network Filters).
Docker Everything works out of the box, without having to write own rules or handle wiring with own Docker event handler.</description></item><item><title>Flakes and little convenient impurity escape hatch</title><link>https://blog.zentria.company/posts/flakes-and-little-convenient-impurity-escape-hatch/</link><pubDate>Sun, 20 Mar 2022 23:20:00 +0200</pubDate><guid>https://blog.zentria.company/posts/flakes-and-little-convenient-impurity-escape-hatch/</guid><description>Started using flakes recently? But then you found that:
You need per-machine configuration for experimentation/secrets (well, e.g firewall config), but don&amp;rsquo;t want to publish them. Your configuration is against your usual quality standards, so it&amp;rsquo;d be shame to show them to the world. Here&amp;rsquo;s one solution to that - works similarly to how current NixOS deployments are still done.
flake.nix { inputs = { impure-local.url = &amp;#34;path:./impure-local&amp;#34;; impure-local.flake = false; }; outputs = { nixpkgs, impure-local }: { nixosConfigurations.</description></item><item><title>Container bind mount pitfalls: DNS</title><link>https://blog.zentria.company/posts/container-bind-mount-pitfalls-dns/</link><pubDate>Sun, 06 Jun 2021 19:56:22 +0300</pubDate><guid>https://blog.zentria.company/posts/container-bind-mount-pitfalls-dns/</guid><description>It&amp;#39;s not DNS. There&amp;#39;s no way it&amp;#39;s DNS. It was DNS. Story time? Story time. I had this very old deployment of Clojure app around, orchestrating quite many Docker containers and their data volumes. It was set up to connect to a PostgreSQL database and Redis running on the container host, implying no magical DNS solutions nor any convenience at all (manual /24 subnet configuration and firewalling). 1</description></item><item><title>It's 2021: nftables still does not integrate</title><link>https://blog.zentria.company/posts/its-2021-nftables-still-does-not-integrate/</link><pubDate>Sat, 29 May 2021 19:25:17 +0300</pubDate><guid>https://blog.zentria.company/posts/its-2021-nftables-still-does-not-integrate/</guid><description>You probably have seen it around somewhere already, for example Debian trying hard to replace iptables with it.
Debian 10 (buster) shipped with it already, Arch Linux wiki provided (usable) examples for the adventurous back in 2014 etc.
(nftables is quite promising, don&amp;rsquo;t get me wrong - I quite like it, because how much easier it is to use and integrate. This is rather a rant towards other projects.)
HOWEVER, integrating it into existing solutions turns out to be VERY painful:</description></item><item><title>An adventure of getting Docker on NixOS running only with cgroups v2</title><link>https://blog.zentria.company/posts/nixos-cgroupsv2/</link><pubDate>Sat, 24 Oct 2020 14:46:00 +0300</pubDate><guid>https://blog.zentria.company/posts/nixos-cgroupsv2/</guid><description>After discovering Linux&amp;rsquo;s wonderful Pressure Stall Information (PSI for short) subsystem, I&amp;rsquo;ve been trying to set up monitoring on Docker containers where I run very memory, CPU and I/O hungry game servers (not hard to guess - it&amp;rsquo;s Minecraft).
Since I monitor pretty much everything using Prometheus, then finding Cloudflare&amp;rsquo;s psi_exporter project made my life a lot easier - I didn&amp;rsquo;t have to write an exporter myself.
Why do cgroups v2 matter?</description></item></channel></rss>